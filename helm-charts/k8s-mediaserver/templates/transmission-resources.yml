{{- if .Values.transmission.enabled -}}
---
### CONFIGMAP
## INIT-CONTAINER
apiVersion: v1
data:
  init-transmission.sh: |
    #!/bin/bash
    echo "### Initializing config ###"
    if [ ! -f /transmission-config/settings.json ]; then
      cp -n /init-transmission/settings.json /transmission-config/settings.json
      cp -n /init-transmission/myvpn.ovpn /etc/openvpn/custom/myvpn.ovpn
      echo "### No configuration found, intialized with default settings ###"
    fi
  myvpn.ovpn: |
    # ==============================================================================
    # Copyright (c) 2023 Proton AG (Switzerland)
    # Email: contact@protonvpn.com
    #
    # The MIT License (MIT)
    #
    # Permission is hereby granted, free of charge, to any person obtaining a copy
    # of this software and associated documentation files (the "Software"), to deal
    # in the Software without restriction, including without limitation the rights
    # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    # copies of the Software, and to permit persons to whom the Software is
    # furnished to do so, subject to the following conditions:
    #
    # The above copyright notice and this permission notice shall be included in all
    # copies or substantial portions of the Software.
    #
    # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR # OTHERWISE, ARISING
    # FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
    # IN THE SOFTWARE.
    # ==============================================================================

    # The server you are connecting to is using a circuit in order to separate entry IP from exit IP
    # The same entry IP allows to connect to multiple exit IPs in the same data center.

    # If you want to explicitly select the exit IP corresponding to server RU#1 you need to
    # append a special suffix to your OpenVPN username.
    # Please use "SoQkBuzt2K2vYfeM+b:2" in order to enforce exiting through RU#1.

    # If you are a paying user you can also enable the ProtonVPN ad blocker (NetShield) or Moderate NAT:
    # Use: "SoQkBuzt2K2vYfeM+b:2+f1" to enable anti-malware filtering
    # Use: "SoQkBuzt2K2vYfeM+b:2+f2" to additionally enable ad-blocking filtering
    # Use: "SoQkBuzt2K2vYfeM+b:2+nr" to enable Moderate NAT
    # Note that you can combine the "+nr" suffix with other suffixes.

    client
    dev tun
    proto udp

    remote 5.8.16.234 51820
    remote 5.8.16.234 1194
    remote 5.8.16.234 4569
    remote 5.8.16.234 5060
    remote 5.8.16.234 80

    remote-random
    resolv-retry infinite
    nobind

    cipher AES-256-GCM

    setenv CLIENT_CERT 0
    tun-mtu 1500
    mssfix 0
    persist-key
    persist-tun

    reneg-sec 0

    remote-cert-tls server
    auth-user-pass


    <ca>
    -----BEGIN CERTIFICATE-----
    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
    EA==
    -----END CERTIFICATE-----
    </ca>

    <tls-crypt>
    -----BEGIN OpenVPN Static key V1-----
    6acef03f62675b4b1bbd03e53b187727
    423cea742242106cb2916a8a4c829756
    3d22c7e5cef430b1103c6f66eb1fc5b3
    75a672f158e2e2e936c3faa48b035a6d
    e17beaac23b5f03b10b868d53d03521d
    8ba115059da777a60cbfd7b2c9c57472
    78a15b8f6e68a3ef7fd583ec9f398c8b
    d4735dab40cbd1e3c62a822e97489186
    c30a0b48c7c38ea32ceb056d3fa5a710
    e10ccc7a0ddb363b08c3d2777a3395e1
    0c0b6080f56309192ab5aacd4b45f55d
    a61fc77af39bd81a19218a79762c3386
    2df55785075f37d8c71dc8a42097ee43
    344739a0dd48d03025b0450cf1fb5e8c
    aeb893d9a96d1f15519bb3c4dcb40ee3
    16672ea16c012664f8a9f11255518deb
    -----END OpenVPN Static key V1-----
    </tls-crypt>


  settings.json: |
    {
        "alt-speed-down": 50,
        "alt-speed-enabled": false,
        "alt-speed-time-begin": 540,
        "alt-speed-time-day": 127,
        "alt-speed-time-enabled": false,
        "alt-speed-time-end": 1020,
        "alt-speed-up": 50,
        "bind-address-ipv4": "0.0.0.0",
        "bind-address-ipv6": "::",
        "blocklist-enabled": false,
        "blocklist-url": "http://www.example.com/blocklist",
        "cache-size-mb": 4,
        "dht-enabled": true,
        "download-dir": "/{{ .Values.general.storage.subPaths.downloads }}/{{ .Values.general.storage.subPaths.transmission }}/complete",
        "download-queue-enabled": true,
        "download-queue-size": 5,
        "encryption": 1,
        "idle-seeding-limit": 30,
        "idle-seeding-limit-enabled": false,
        "incomplete-dir": "/{{ .Values.general.storage.subPaths.downloads }}/{{ .Values.general.storage.subPaths.transmission }}/incomplete",
        "incomplete-dir-enabled": true,
        "lpd-enabled": false,
        "message-level": 2,
        "peer-congestion-algorithm": "",
        "peer-id-ttl-hours": 6,
        "peer-limit-global": 200,
        "peer-limit-per-torrent": 50,
        "peer-port": {{ .Values.transmission.service.peer.port }},
        "peer-port-random-high": 65535,
        "peer-port-random-low": 49152,
        "peer-port-random-on-start": false,
        "peer-socket-tos": "default",
        "pex-enabled": true,
        "port-forwarding-enabled": true,
        "preallocation": 1,
        "prefetch-enabled": true,
        "queue-stalled-enabled": true,
        "queue-stalled-minutes": 30,
        "ratio-limit": 2,
        "ratio-limit-enabled": false,
        "rename-partial-files": true,
        "rpc-authentication-required": {{ .Values.transmission.config.auth.enabled }},
        "rpc-bind-address": "0.0.0.0",
        "rpc-enabled": true,
        "rpc-host-whitelist": "",
        "rpc-host-whitelist-enabled": false,
        "rpc-password": {{ .Values.transmission.config.auth.password | quote }} ,
        "rpc-port": 9091,
        "rpc-url": "{{ .Values.transmission.ingress.path }}/",
        "rpc-username": {{ .Values.transmission.config.auth.username | quote }},
        "rpc-whitelist": "127.0.0.1",
        "rpc-whitelist-enabled": false,
        "scrape-paused-torrents-enabled": true,
        "script-torrent-done-enabled": false,
        "script-torrent-done-filename": "",
        "seed-queue-enabled": false,
        "seed-queue-size": 10,
        "speed-limit-down": 100,
        "speed-limit-down-enabled": false,
        "speed-limit-up": 100,
        "speed-limit-up-enabled": false,
        "start-added-torrents": true,
        "trash-original-torrent-files": false,
        "umask": 2,
        "upload-slots-per-torrent": 14,
        "utp-enabled": false,
        "watch-dir": "/watch",
        "watch-dir-enabled": true
    }
kind: ConfigMap
metadata:
  name: init-transmission-cm
---
## APPLICATION
apiVersion: v1
kind: ConfigMap
metadata:
  name: transmission-config
data:
  PGID: "{{ .Values.general.pgid }}"
  PUID: "{{ .Values.general.puid }}"
  OPENVPN_PROVIDER: "{{ .Values.transmission.config.openvpn.provider }}"
  OPENVPN_CONFIG: "{{ .Values.transmission.config.openvpn.config }}"
  OPENVPN_USERNAME: "{{ .Values.transmission.config.openvpn.username }}"
  OPENVPN_PASSWORD: "{{ .Values.transmission.config.openvpn.password }}"
  LOCAL_NETWORK: "{{ .Values.transmission.config.openvpn.network }}"
---
### DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transmission
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "k8s-mediaserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-mediaserver.selectorLabels" . | nindent 8 }}
        app: transmission
    spec:
      initContainers:
        - name: config-transmission
          image: docker.io/ubuntu:groovy
          command: ["/init-transmission/init-transmission.sh"]
          volumeMounts:
            - mountPath: /init-transmission
              name: init-files-transmission
          {{ if .Values.transmission.volume }}
            - name: {{ .Values.transmission.volume.name }}
              mountPath: /transmission-config
          {{ else }}
            - name: mediaserver-volume
              mountPath: "/transmission-config"
              subPath: "{{ .Values.general.storage.subPaths.config }}/transmission"
          {{ end }}
          securityContext:
            runAsUser: {{ .Values.general.puid }}
            runAsGroup: {{ .Values.general.pgid }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: transmission-config
          image: "{{ .Values.transmission.container.image }}:{{ .Values.transmission.container.tag | default .Values.general.image_tag }}"
          imagePullPolicy: Always
          readinessProbe:
            tcpSocket:
              port: {{ .Values.transmission.container.port.utp }}
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - name: trans-port
              containerPort: {{ .Values.transmission.container.port.utp }}
              protocol: TCP
            - name: trans-peer-tcp
              containerPort: {{ .Values.transmission.container.port.peer }}
              protocol: TCP
            - name: trans-peer-udp
              containerPort: {{ .Values.transmission.container.port.peer }}
              protocol: UDP
          volumeMounts:
          {{ if .Values.transmission.volume }}
            - name: {{ .Values.transmission.volume.name }}
              mountPath: /config
          {{ else }}
            - name: mediaserver-volume
              mountPath: "/config"
              subPath: "{{ .Values.general.storage.subPaths.config }}/transmission"
          {{ end }}
            - name: mediaserver-volume
              mountPath: "/data"
              subPath: "{{ .Values.general.storage.subPaths.downloads }}"

          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          {{- with .Values.transmission.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{ if not .Values.general.storage.customVolume }}
        - name: mediaserver-volume
          persistentVolumeClaim:
            claimName: {{ .Values.general.storage.pvcName }}
        {{ else }}
        - name: mediaserver-volume
          {{- toYaml .Values.general.storage.volumes | nindent 10 }}
        {{ end }}
        {{ if .Values.transmission.volume }}
        - name: {{ .Values.transmission.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.transmission.volume.name }}
        {{ end }}
        - name: init-files-transmission
          configMap:
            defaultMode: 493
            name: init-transmission-cm
      {{- with .Values.general.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
### SERVICES
apiVersion: v1
kind: Service
metadata:
  name: transmission
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: {{ .Values.transmission.service.utp.type }}
  ports:
    - port: {{ .Values.transmission.service.utp.port }}
      targetPort: {{ .Values.transmission.container.port.utp }}
      protocol: TCP
      name: trans-port
{{ if eq .Values.transmission.service.utp.type "NodePort" }}
      nodePort: {{ .Values.transmission.service.utp.nodePort }}
{{ end }}
  selector:
    app: transmission
---
apiVersion: v1
kind: Service
metadata:
  name: transmission-peer-tcp
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: {{ .Values.transmission.service.peer.type }}
  ports:
    - port: {{ .Values.transmission.service.peer.port }}
      targetPort: {{ .Values.transmission.container.port.peer }}
      protocol: TCP
      name: trans-peer-tcp
{{ if eq .Values.transmission.service.peer.type "NodePort" }}
      nodePort: {{ .Values.transmission.service.peer.nodePort }}
{{ end }}
  selector:
    app: transmission
---
apiVersion: v1
kind: Service
metadata:
  name: transmission-peer-udp
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: {{ .Values.transmission.service.peer.type }}
  ports:
    - port: {{ .Values.transmission.service.peer.port }}
      targetPort: {{ .Values.transmission.container.port.peer }}
      protocol: UDP
      name: trans-peer-udp
{{ if eq .Values.transmission.service.peer.type "NodePort" }}
      nodePort: {{ .Values.transmission.service.peer.nodePortUDP }}
{{ end }}
  selector:
    app: transmission
---
{{ if .Values.transmission.service.utp.extraLBService }}
apiVersion: v1
kind: Service
metadata:
  name: transmission-lb
  annotations:
    {{- include .Values.transmission.service.extraLBService.annotations . | nindent 4 }}
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: LoadBalancer
  ports:
    - port: {{ .Values.transmission.service.port }}
      targetPort: {{ .Values.transmission.container.port }}
      protocol: TCP
      name: trans-port
  selector:
    app: transmission
---
{{ end }}
{{ if .Values.transmission.service.peer.extraLBService }}
apiVersion: v1
kind: Service
metadata:
  name: transmission-lb-peer-tcp
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: LoadBalancer
  ports:
    - port: {{ .Values.transmission.service.peer.port }}
      targetPort: {{ .Values.transmission.container.port.peer }}
      protocol: TCP
      name: trans-peer-tcp
  selector:
    app: transmission
---
apiVersion: v1
kind: Service
metadata:
  name: transmission-lb-peer-udp
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: LoadBalancer
  ports:
    - port: {{ .Values.transmission.service.peer.port }}
      targetPort: {{ .Values.transmission.container.port.peer }}
      protocol: UDP
      name: trans-peer-udp
  selector:
    app: transmission
{{ end }}
---
### INGRESS
{{ if .Values.transmission.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: transmission
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
  {{- with .Values.transmission.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.transmission.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.general.ingress_host | quote }}
      secretName: {{ .Values.transmission.ingress.tls.secretName }}
{{ end }}
  ingressClassName: {{ .Values.general.ingress.ingressClassName }}
  rules:
    - host: {{ .Values.general.ingress_host | quote }}
      http:
        paths:
          - path: {{ .Values.transmission.ingress.path }}
            pathType: Prefix
            backend:
              service:
                name: transmission
                port:
                  number: {{ .Values.transmission.service.utp.port }}
{{ end }}
{{ end }}
